# serverless.yml

service: firefighter-data-processing

provider:
  name: aws
  runtime: nodejs12.x
  stage:  ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource: !GetAtt TeamTable.Arn
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource: !GetAtt MemberTable.Arn
functions:
  data-process:
    handler: saveToDB.handler
    events:
      - iot:
          sql: "SELECT * FROM 'firefighter/data'"

resources: # CloudFormation template syntax from here on.
  Resources:
    TeamTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Teams
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    MemberTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Members
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: datetime
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: datetime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: TTL
          Enabled: True



  Outputs:
    TeamTableOutput:
      Value: !GetAtt TeamTable.Arn
      Export:
        Name: TeamTableArn
    MemberTableOutput:
      Value: !GetAtt MemberTable.Arn
      Export:
        Name: MemberTableArn